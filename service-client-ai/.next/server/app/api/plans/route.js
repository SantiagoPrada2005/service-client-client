(()=>{var e={};e.id=382,e.ids=[382],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19771:e=>{"use strict";e.exports=require("process")},20777:(e,s,r)=>{"use strict";r.r(s),r.d(s,{patchFetch:()=>f,routeModule:()=>x,serverHooks:()=>g,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>E});var t={};r.r(t),r.d(t,{DELETE:()=>d,GET:()=>u,POST:()=>p,PUT:()=>l});var n=r(96559),a=r(48088),o=r(37719),c=r(32190),i=r(66106);async function u(){try{let e=await (0,i.P)("SELECT * FROM plans");return c.NextResponse.json({success:!0,data:e,message:"Plans retrieved successfully"},{status:200})}catch(e){return console.error("Database query error:",e),c.NextResponse.json({success:!1,message:"Failed to retrieve plans",error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function p(e){try{let{name:s,price:r,maxChatbots:t,maxMessages:n}=await e.json();if(!s||!r)return c.NextResponse.json({success:!1,message:"Name and price are required"},{status:400});if("number"!=typeof t||"number"!=typeof n)return c.NextResponse.json({success:!1,message:"maxChatbots and maxMessages must be numbers"},{status:400});let a=await (0,i.P)("INSERT INTO plans (name, price, max_chatbots, max_messages) VALUES (?, ?, ?, ?)",[s,r,t,n]),[o]=await (0,i.P)("SELECT * FROM plans WHERE id = ?",[a.insertId]);return c.NextResponse.json({success:!0,data:o,message:"Plan created successfully"},{status:201})}catch(e){return console.error("Error creating plan:",e),c.NextResponse.json({success:!1,message:"Error creating plan",error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function l(e){try{let{id:s,...r}=await e.json();if(!s)return c.NextResponse.json({success:!1,message:"Plan ID is required"},{status:400});let t=Object.keys(r).map(e=>`${e} = ?`),n=Object.values(r),a=`UPDATE plans SET ${t.join(", ")} WHERE id = ?`,o=await (0,i.P)(a,[...n,s]);if(0===o.affectedRows)return c.NextResponse.json({success:!1,message:"Plan not found"},{status:404});let[u]=await (0,i.P)("SELECT * FROM plans WHERE id = ?",[s]);return c.NextResponse.json({success:!0,data:u,message:"Plan updated successfully"},{status:200})}catch(e){return console.error("Error updating plan:",e),c.NextResponse.json({success:!1,message:"Error updating plan",error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function d(e){try{let{id:s}=await e.json();if(!s)return c.NextResponse.json({success:!1,message:"Plan ID is required"},{status:400});let r=await (0,i.P)("DELETE FROM plans WHERE id = ? RETURNING *",[s]);if(0===r.affectedRows)return c.NextResponse.json({success:!1,message:"Plan not found"},{status:404});return c.NextResponse.json({success:!0,message:"Plan deleted successfully"},{status:200})}catch(e){return console.error("Error deleting plan:",e),c.NextResponse.json({success:!1,message:"Error deleting plan",error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let x=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/plans/route",pathname:"/api/plans",filename:"route",bundlePath:"app/api/plans/route"},resolvedPagePath:"/Users/santiagopradamoreno/Documents/ServiceClient/service-client-client/service-client-ai/src/app/api/plans/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:m,workUnitAsyncStorage:E,serverHooks:g}=x;function f(){return(0,o.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:E})}},27910:e=>{"use strict";e.exports=require("stream")},28303:e=>{function s(e){var s=Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}s.keys=()=>[],s.resolve=s,s.id=28303,e.exports=s},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},34631:e=>{"use strict";e.exports=require("tls")},41204:e=>{"use strict";e.exports=require("string_decoder")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},66106:(e,s,r)=>{"use strict";r.d(s,{P:()=>p});var t=r(46101),n=r(33873),a=r.n(n);let o=require("fs");var c=r.n(o);let i={host:process.env.DB_HOST||"localhost",user:process.env.DB_USER||"root",password:process.env.DB_PASSWORD||"",database:process.env.DB_NAME||"serviceClientAIDB",port:parseInt(process.env.DB_PORT||"3306"),waitForConnections:!0,connectionLimit:10,queueLimit:0,ssl:{ca:c().readFileSync(a().join(process.cwd(),"/etc/secrets/server-ca.pem")),key:c().readFileSync(a().join(process.cwd(),"/etc/secrets/client-key.pem")),cert:c().readFileSync(a().join(process.cwd(),"/etc/secrets/client-cert.pem"))}},u=null;async function p(e,s=[]){try{let[r]=await (u||(console.log("Creando pool de conexiones"),u=t.createPool(i)),u).execute(e,s);return r}catch(e){throw console.error("Error en la consulta SQL:",e),e}}},66136:e=>{"use strict";e.exports=require("timers")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var s=require("../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[447,580,101],()=>r(20777));module.exports=t})();